// creation of global variables
const sounds = document.querySelectorAll(".sound");
const notes = Array.from(document.querySelectorAll(".note"));
const notesCols = Array.from(document.querySelectorAll(".notes-col"));
let musicPlaying;

let tempo = 120;
let timeoutTempo = 60000 / (tempo * 2);

// load sounds for the pad
window.addEventListener("load", () => {
  const pads = document.querySelectorAll(".pads div");
  // controls the bottom pads to play sounds
  pads.forEach((pad, index) => {
    pad.addEventListener("click", function() {
      sounds[index].play();
    });
  });
});

// listener for the buttons on the beat maker section
window.addEventListener("load", () => {
  notes.forEach(note => {
    note.addEventListener("click", function() {
      note.classList.toggle("highlighted");
      const rowsToggle = note.id.split("-")[1];
      const colsToggle = note.id.split("-")[2];
      partition1[rowsToggle][colsToggle] = !partition1[rowsToggle][colsToggle];
    });
  });
});

// test variable for 1 bar of music
const soundsToPlay = [false, true, false, false, false, true];

// result generated by the user when he clicks on the pads on the screen (all false at the start)
const partition1 = [
  [false, false, false, false, false, false],
  [false, false, false, false, false, false],
  [false, false, false, false, false, false],
  [false, false, false, false, false, false]
];

// Playing 1 bar of sounds generated by the user
function playBeat(soundsArr) {
  soundsArr.forEach((s, i) => {
    if (s) {
      sounds[i].currentTime = 0;
      sounds[i].play();
    }
  });
}

// playing the whole partition (loops trough each bar)
function playMusic(partition, tempo) {
  let counter = 0;
  musicPlaying = setInterval(function() {
    playBeat(partition[counter]);
    highlightCol(counter);
    counter++;
    if (counter === partition.length) counter = 0;
  }, tempo);
}

// highlights the current playing bar
function highlightCol(index) {
  notesCols.forEach(col => col.classList.remove("notes-col-highlighted"));
  notesCols[index].classList.add("notes-col-highlighted");
}

// updates the tempo when the user changes the value
function updateTempoValue(val) {
  document.getElementById("tempo-disp").innerText = "Tempo: " + val;
  tempo = val;
  timeoutTempo = 60000 / (tempo * 2);
}

function stopPlaying() {
  clearInterval(musicPlaying);
}
